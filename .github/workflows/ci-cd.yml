name: CI/CD for DigitalOcean Kubernetes

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use an Ubuntu runner for this job

    steps:
    # Step 1: Check out code from GitHub
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker build environment
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    # Step 3: Log in to DigitalOcean's container registry
    - name: Log in to DigitalOcean Container Registry
      uses: docker/login-action@v2
      with:
        registry: registry.digitalocean.com
        username: ${{ secrets.DO_USERNAME }}  # Store your username in GitHub Secrets
        password: ${{ secrets.DO_TOKEN }}  # Store your DigitalOcean API token in GitHub Secrets

    # Step 4: Build and push Docker image to DOCR
    - name: Build and push Docker image
      run: |
        echo "Building Docker image..."
        docker build -t registry.digitalocean.com/my-registry/my-image:${{ github.sha }} .
        echo "Pushing Docker image..."
        docker push registry.digitalocean.com/my-registry/my-image:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure this step runs after the build step

    steps:
    # Step 1: Checkout code again
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Kubernetes configuration
    - name: Set up Kubeconfig
      run: echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

    # Step 3: Deploy to DigitalOcean Kubernetes Cluster
    - name: Deploy to Kubernetes
      run: |
        kubectl --kubeconfig=kubeconfig.yaml set image deployment/my-app-deployment my-app-container=registry.digitalocean.com/my-registry/my-image:${{ github.sha }}
        kubectl --kubeconfig=kubeconfig.yaml rollout restart deployment/my-app-deployment
